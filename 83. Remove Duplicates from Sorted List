# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        
        
        if head is None:
            return head;
        """ 
        result = ListNode(head.val);
        temp = result
        while head is not None:
            if head.val == temp.val:
                head = head.next;
            else: 
                temp.next = ListNode(head.val);
                temp = temp.next;
                head = head.next;
        return result;
        
        """
        
        
        # faster, don't add a new ListNode
        
        result = head;
        
        while head.next is not None:
            if head.val == head.next.val:
                head.next = head.next.next;
                #if head.next is not None and head.val != head.next.val:
                #    head = head.next;
            else:
                head = head.next;
        
        return result;
            
